{application, erllambda,
 [{description, "Erlang AWS Lambda and Utilities"},
  {vsn, "git"},
  {registered, []},
  {mod, {erllambda_app, []}},
  {applications,
   [
    kernel,
    stdlib,
    lhttpc,
    erlcloud,
    jsone
   ]},
  {env,
   [
    %% Print Env during Init or not
    {print_env, false},
    %% execution AWS region, typically only defined by some controlling
    %% framework.
    {region, undefined},
    %% execution AWS accountid, typically only defined by some controlling
    %% framework.
    {accountid, undefined},
    %% execution environ (typically USER or base stack name), typically
    %% only defined by some controlling framework.
    {environ, undefined},
    %% predefined erlcloud config that is set by some controlling
    %% framework, so that client applications can get valid base config
    %% when it is otherwise not available via erlcloud_aws:auto_config/0.
    %% The default is for this to be undefined, which will instead use
    %% erlcloud_aws:auto_config/0.
    {config, undefined},
    %% set the STS expiration to max by default.
    {default_role_duration_sec, 3600},
    %% how much upfront to evict the STS token record
    {default_role_evict_sec, 10},
    %% do less GC while executing the handler
    {handler_spawn_opts, [
     {min_bin_vheap_size, 2487399},
     {min_heap_size, 2487399}
    ]},
    %% defines whether or not "erllambda_error_handler"
    %% should be added on startup to error_logger
    {enable_error_handler, true}
   ]},
  {modules, []},
  {licenses, ["MIT"]},
  {links, [{"Github", "https://github.com/alertlogic/erllambda"}]}
 ]}.
